{"meta":{"title":"Legrandk's Qzone","subtitle":"","description":"","author":"Legrandk","url":"https://legr4ndk.github.io","root":"/"},"pages":[{"title":"友情链接","date":"2020-10-17T10:21:49.923Z","updated":"2020-10-17T10:21:49.923Z","comments":false,"path":"links/index.html","permalink":"https://legr4ndk.github.io/links/index.html","excerpt":"","text":""},{"title":"关于","date":"2020-10-16T09:08:25.732Z","updated":"2020-10-16T09:08:25.732Z","comments":false,"path":"about/index.html","permalink":"https://legr4ndk.github.io/about/index.html","excerpt":"","text":"一只HDU的沙雕id源自曾服役120年的国际标准公斤实体Le Grand K网络空间安全专业出身，现为计算机科学与技术专业学生主要研究C++与C#游戏开发、Web应用程序后端前端苦手（泪目），日语菜鸡插着的flag永远不拔（宛如戏台上的老将军）欢迎来找我玩啊哈哈哈"},{"title":"分类","date":"2020-10-16T07:32:16.374Z","updated":"2020-10-16T07:32:16.374Z","comments":false,"path":"categories/index.html","permalink":"https://legr4ndk.github.io/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-10-16T07:32:16.376Z","updated":"2020-10-16T07:32:16.376Z","comments":false,"path":"tags/index.html","permalink":"https://legr4ndk.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"C语言数字、指针、布尔值灵活利用的典范","slug":"TheCLanguageIsSoNB","date":"2020-10-16T16:12:19.000Z","updated":"2020-10-16T16:38:50.689Z","comments":true,"path":"2020/10/17/TheCLanguageIsSoNB/","link":"","permalink":"https://legr4ndk.github.io/2020/10/17/TheCLanguageIsSoNB/","excerpt":"","text":"先思考这个问题，假设我有一组数，我需要在每两个数字中间加入一个空格然后再输出出来，末尾和头部都没有空格，应该如何实现。 实现方法很简单，加个if就可以实现了，比如我想输出1 2 3 4 5 6，就可以这样： #include&lt;stdio.h&gt;int main()&#123; int arr[6] = &#123; 1, 2, 3, 4, 5, 6 &#125;; for (int i = 0; i &lt; 6; i++) &#123; if (i == 5) //输出到最后一个数字了 printf(&quot;%d&quot;, arr[i]); else printf(&quot;%d &quot;, arr[i]); &#125; return 0; 我们利用一个if语句来判断是否输出到最后一个数字，来选择是否输出占位的空格。事实上，也可以对第一个数字特殊对待，然后剩余数据输出时附带一个空格。 但是如果我们这么做呢： #include&lt;stdio.h&gt;int main()&#123; int arr[6] = &#123; 1, 2, 3, 4, 5, 6 &#125;; for (int i = 0; i &lt; 6; i++) printf(&quot; %d&quot; + !i, arr[i]); return 0;&#125; 极其简单的几句话完成了我们之前要的操作，一气呵成。 我详细叙述下它的过程： 玄机在于printf语句的那个加法上。C语言的字符串常量作参数，实际上是一个指向常量池中该字符串的指针，也就是可以进行运算。然后就是一个!i，这是把C语言中的整型数据当布尔值来看待，对他取非。当循环第一趟时，i=0，0在C语言中是false，非i得到true，默认为1，当那个指针+1，指针就从原来的指向空格，变成指向“%d”，那么就不会输出空格。而当之后几轮时，i均为非0数，C语言中为true，那么取非则得到false，即0，那么原指针+0，就是它本身，也就会正常输出空格，最后达到我们的要求。 这种写法说实话有很大局限性，可读性也极差，但是却很好的体现了C语言的灵活之处。C语言对数据和内存的操作极为灵活，这就要求使用者有很高的水平。这种写法不推荐在正式的程序设计中使用，但是对于开拓思维、优化程序是很有帮助的。","categories":[{"name":"C/C++","slug":"C-C","permalink":"https://legr4ndk.github.io/categories/C-C/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://legr4ndk.github.io/tags/C-C/"}]},{"title":"Use git to push your code to your Github's repository","slug":"GitPushBriefIntroduction","date":"2020-10-15T15:45:05.000Z","updated":"2020-10-16T14:05:11.711Z","comments":true,"path":"2020/10/15/GitPushBriefIntroduction/","link":"","permalink":"https://legr4ndk.github.io/2020/10/15/GitPushBriefIntroduction/","excerpt":"","text":"First things first,install git. ——Stop BBing if you have not even installed the git. Install git(may need root permission) Ubuntu/Debian/Deepin: apt install git Arch/Manjaro:pacman -S git Free BSD:pkg install git macOS:brew install git Windows:Click HERE to download the installer Run git –version to make sure that git is installed on your device. Put your codes to a folder and initializeNow you can copy+paste all your code that need to be pushed to the Github in your new folder.Then run a terminal in this folder. Using git init to initial your local repository. And do not forget to add a new repository in your Github account.Once you added a new repository to your Github,you will get a repository-link just like this: https://github.com/YourGithubID/YourRepoName.git Now,run git remote add origin $YourRepoLink to link your remote repository to the local one. Add your files to staging areaUse git add $Filename to add the files you need to staging area. Or you can use git add . (THERE IS A DOT AT THE END) to add all your files。 Then run git status to check the files in your local repository. Run git commit -m ‘$YourCommits’ to add some commits to this submit. Push your code to GithubFirst of all,use git pull origin master to pull your online repository. Use git push origin master to submit your files to Github. There are some cases that you will meet the ERROR that refusing to merge unrelated histories when you pull.You can try git pull origin master –allow-unrelated-histories to allow merging two unrelated branches.(At the first time,the online repository is empty but the local one have some files,so of course they are unrelated). Now you can check your new repository on the Github. Done,enjoy.","categories":[{"name":"Git","slug":"Git","permalink":"https://legr4ndk.github.io/categories/Git/"}],"tags":[{"name":"git","slug":"git","permalink":"https://legr4ndk.github.io/tags/git/"}]},{"title":"Hello World","slug":"HelloWorld","date":"2020-10-15T14:30:10.810Z","updated":"2020-10-16T16:06:04.742Z","comments":true,"path":"2020/10/15/HelloWorld/","link":"","permalink":"https://legr4ndk.github.io/2020/10/15/HelloWorld/","excerpt":"","text":"Hello World 哈哈哈今天布置了一个github上的Hexo静态站点 准备下次写个教程（flag插好） 这次我整了两个分部，gitee和github上面我都有布置 不得不吐槽一下gitee page 是真的难用，每次更新居然要去手动刷新，时效性还特么巨低 github就是GFW的锅了，太慢了太慢了，移动甚至都不让你上去 害，这边主要搬运一些之前写在别处的文章 还有随时想写的感想，所以不能算是纯技术类博客吧 （所以这站点名字叫QQ空间哈哈哈哈） 等我更新！ 宰🕊祭天","categories":[],"tags":[]}],"categories":[{"name":"C/C++","slug":"C-C","permalink":"https://legr4ndk.github.io/categories/C-C/"},{"name":"Git","slug":"Git","permalink":"https://legr4ndk.github.io/categories/Git/"}],"tags":[{"name":"C/C++","slug":"C-C","permalink":"https://legr4ndk.github.io/tags/C-C/"},{"name":"git","slug":"git","permalink":"https://legr4ndk.github.io/tags/git/"}]}