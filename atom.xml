<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Legrandk&#39;s Qzone</title>
  
  
  <link href="https://legr4ndk.github.io/atom.xml" rel="self"/>
  
  <link href="https://legr4ndk.github.io/"/>
  <updated>2020-10-16T16:38:50.689Z</updated>
  <id>https://legr4ndk.github.io/</id>
  
  <author>
    <name>Legrandk</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C语言数字、指针、布尔值灵活利用的典范</title>
    <link href="https://legr4ndk.github.io/2020/10/17/TheCLanguageIsSoNB/"/>
    <id>https://legr4ndk.github.io/2020/10/17/TheCLanguageIsSoNB/</id>
    <published>2020-10-16T16:12:19.000Z</published>
    <updated>2020-10-16T16:38:50.689Z</updated>
    
    <content type="html"><![CDATA[<p>先思考这个问题，假设我有一组数，我需要在每两个数字中间加入一个空格然后再输出出来，末尾和头部都没有空格，应该如何实现。</p><p>实现方法很简单，加个if就可以实现了，比如我想输出1 2 3 4 5 6，就可以这样：</p><figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">#include&lt;stdio.h&gt;<br><span class="hljs-built_in">int</span> main()<br>&#123;<br>    <span class="hljs-built_in">int</span> arr[<span class="hljs-number">6</span>] = &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span> &#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (i == <span class="hljs-number">5</span>) <span class="hljs-comment">//输出到最后一个数字了</span><br>            printf(<span class="hljs-string">&quot;%d&quot;</span>, arr[i]);<br>        <span class="hljs-keyword">else</span><br>            printf(<span class="hljs-string">&quot;%d &quot;</span>, arr[i]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><p>我们利用一个if语句来判断是否输出到最后一个数字，来选择是否输出占位的空格。事实上，也可以对第一个数字特殊对待，然后剩余数据输出时附带一个空格。</p><p><strong>但是如果我们这么做呢：</strong></p><figure class="highlight angelscript"><table><tr><td class="code"><pre><code class="hljs angelscript">#include&lt;stdio.h&gt;<br><span class="hljs-built_in">int</span> main()<br>&#123;<br>    <span class="hljs-built_in">int</span> arr[<span class="hljs-number">6</span>] = &#123; <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span> &#125;;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-built_in">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">6</span>; i++)<br>        printf(<span class="hljs-string">&quot; %d&quot;</span> + !i, arr[i]);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>极其简单的几句话完成了我们之前要的操作，一气呵成。</p><p>我详细叙述下它的过程：</p><p>玄机在于printf语句的那个加法上。C语言的字符串常量作参数，实际上是一个指向常量池中该字符串的指针，也就是可以进行运算。然后就是一个!i，这是把C语言中的整型数据当布尔值来看待，对他取非。当循环第一趟时，i=0，0在C语言中是false，非i得到true，默认为1，当那个指针+1，指针就从原来的指向空格，变成指向“%d”，那么就不会输出空格。而当之后几轮时，i均为非0数，C语言中为true，那么取非则得到false，即0，那么原指针+0，就是它本身，也就会正常输出空格，最后达到我们的要求。</p><p>这种写法说实话有很大局限性，可读性也极差，但是却很好的体现了C语言的灵活之处。C语言对数据和内存的操作极为灵活，这就要求使用者有很高的水平。这种写法不推荐在正式的程序设计中使用，但是对于开拓思维、优化程序是很有帮助的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;先思考这个问题，假设我有一组数，我需要在每两个数字中间加入一个空格然后再输出出来，末尾和头部都没有空格，应该如何实现。&lt;/p&gt;
&lt;p&gt;实现方法很简单，加个if就可以实现了，比如我想输出1 2 3 4 5 6，就可以这样：&lt;/p&gt;
&lt;figure class=&quot;highlig</summary>
      
    
    
    
    <category term="C/C++" scheme="https://legr4ndk.github.io/categories/C-C/"/>
    
    
    <category term="C/C++" scheme="https://legr4ndk.github.io/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>Use git to push your code to your Github&#39;s repository</title>
    <link href="https://legr4ndk.github.io/2020/10/15/GitPushBriefIntroduction/"/>
    <id>https://legr4ndk.github.io/2020/10/15/GitPushBriefIntroduction/</id>
    <published>2020-10-15T15:45:05.000Z</published>
    <updated>2020-10-16T14:05:11.711Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>First things first,install git.</p><p>——Stop BBing if you have not even installed the git.</p></blockquote><h3 id="Install-git-may-need-root-permission"><a href="#Install-git-may-need-root-permission" class="headerlink" title="Install git(may need root permission)"></a>Install git(may need root permission)</h3><ul><li>Ubuntu/Debian/Deepin: <strong>apt install git</strong></li><li>Arch/Manjaro:<strong>pacman -S git</strong></li><li>Free BSD:<strong>pkg install git</strong></li><li>macOS:<strong>brew install git</strong></li><li>Windows:Click <a href="https://git-scm.com/downloads">HERE</a> to download the installer</li></ul><p>Run <strong>git –version</strong> to make sure that git is installed on your device.</p><h3 id="Put-your-codes-to-a-folder-and-initialize"><a href="#Put-your-codes-to-a-folder-and-initialize" class="headerlink" title="Put your codes to a folder and initialize"></a>Put your codes to a folder and initialize</h3><p>Now you can copy+paste all your code that need to be pushed to the Github in your new folder.Then run a terminal in this folder.</p><p>Using <strong>git init</strong> to initial your local repository.</p><p>And do not forget to add a new repository in your Github account.Once you added a new repository to your Github,you will get a repository-link just like this:</p><figure class="highlight awk"><table><tr><td class="code"><pre><code class="hljs awk">https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/YourGithubID/</span>YourRepoName.git<br></code></pre></td></tr></table></figure><p>Now,run <strong>git remote add origin $YourRepoLink</strong> to link your remote repository to the local one.</p><h3 id="Add-your-files-to-staging-area"><a href="#Add-your-files-to-staging-area" class="headerlink" title="Add your files to staging area"></a>Add your files to staging area</h3><p>Use <strong>git add $Filename</strong> to add the files you need to staging area. Or you can use <strong>git add .</strong> (THERE IS A DOT AT THE END) to add all your files。</p><p>Then run <strong>git status</strong> to check the files in your local repository.</p><p>Run <strong>git commit -m ‘$YourCommits’</strong> to add some commits to this submit.</p><h3 id="Push-your-code-to-Github"><a href="#Push-your-code-to-Github" class="headerlink" title="Push your code to Github"></a>Push your code to Github</h3><p>First of all,use <strong>git pull origin master</strong> to pull your online repository.</p><p>Use <strong>git push origin master</strong> to submit your files to Github.</p><p>There are some cases that you will meet the ERROR that <em>refusing to merge unrelated histories</em> when you pull.You can try <strong>git pull origin master –allow-unrelated-histories</strong> to allow merging two unrelated branches.(At the first time,the online repository is empty but the local one have some files,so of course they are unrelated).</p><p>Now you can check your new repository on the Github.</p><p>Done,enjoy.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;First things first,install git.&lt;/p&gt;
&lt;p&gt;——Stop BBing if you have not even installed the git.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;Instal</summary>
      
    
    
    
    <category term="Git" scheme="https://legr4ndk.github.io/categories/Git/"/>
    
    
    <category term="git" scheme="https://legr4ndk.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://legr4ndk.github.io/2020/10/15/HelloWorld/"/>
    <id>https://legr4ndk.github.io/2020/10/15/HelloWorld/</id>
    <published>2020-10-15T14:30:10.810Z</published>
    <updated>2020-10-16T16:06:04.742Z</updated>
    
    <content type="html"><![CDATA[<h3>Hello World</h3><p>哈哈哈今天布置了一个github上的Hexo静态站点</p><p>准备下次写个教程（flag插好）</p><p>这次我整了两个分部，gitee和github上面我都有布置</p><p>不得不吐槽一下gitee page 是真的难用，每次更新居然要去手动刷新，时效性还特么巨低</p><p>github就是GFW的锅了，太慢了太慢了，移动甚至都不让你上去</p><p>害，这边主要搬运一些之前写在别处的文章</p><p>还有随时想写的感想，所以不能算是纯技术类博客吧</p><p>（所以这站点名字叫QQ空间哈哈哈哈）</p><p>等我更新！</p><p><strong>宰🕊祭天</strong></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3&gt;Hello World&lt;/h3&gt;

&lt;p&gt;哈哈哈今天布置了一个github上的Hexo静态站点&lt;/p&gt;
&lt;p&gt;准备下次写个教程（flag插好）&lt;/p&gt;
&lt;p&gt;这次我整了两个分部，gitee和github上面我都有布置&lt;/p&gt;
&lt;p&gt;不得不吐槽一下gitee page 是真</summary>
      
    
    
    
    
  </entry>
  
</feed>
